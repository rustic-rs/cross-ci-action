name: Cross CI
description: |
  Run cross-ci for rustic* crates
author: "rustic-rs maintainers"
inputs:
  toolchain:
    description: |
      The rust toolchain to use
    required: true
  target:
    description: |
      The target to build for
    required: true
  use-cross:
    description: |
      Use cross to build the binary
    required: true
  os:
    description: |
      The operating system to build for
    required: false
  github-token:
    description: |
      The github token to use
    required: false
  feature:
    description: |
      Build features
    required: false
    default: "all-features"

runs:
  using: "composite"
  steps:
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af # v1
      with:
        toolchain: ${{ inputs.toolchain }}
        profile: minimal
        override: true
        target: ${{ inputs.target }}

    - name: install compiler
      shell: bash
      if: inputs.target == 'x86_64-unknown-linux-musl'
      run: |
        sudo apt update
        sudo apt-get install -y musl-tools

    - name: Cache brew deps
      uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3
      id: brew-cache
      if: inputs.target == 'x86_64-apple-darwin' && inputs.use-cross == 'false'
      with:
        # Paths to cache:
        # /usr/local/Homebrew - installation folder of Homebrew
        # /usr/local/Cellar - installation folder of Homebrew formulae
        # /usr/local/Frameworks, /usr/local/bin, /usr/local/opt - contain (links to) binaries installed by Homebrew formulae
        # /usr/local/lib/python3.9 - Python3 packages installation
        path: |
          /usr/local/Homebrew
          /usr/local/Cellar
          /usr/local/Frameworks
          /usr/local/bin
        key: zld-cache-${{ inputs.target }}

    - name: install compiler on macos
      shell: bash
      if: inputs.target == 'x86_64-apple-darwin' && inputs.use-cross == 'false'
      run: |
        brew install michaeleisel/zld/zld

    - name: install mold linker on linux gnu
      if: inputs.target == 'x86_64-unknown-linux-gnu' && inputs.use-cross == 'false'
      uses: rui314/setup-mold@v1

    - uses: Swatinem/rust-cache@e207df5d269b42b69c8bc5101da26f7d31feddb4 # v2
      with:
        key: ${{ inputs.target }}

    - name: Use win config
      shell: bash
      if: inputs.target == 'x86_64-pc-windows-msvc'
      run: |
        cp -T ${GITHUB_ACTION_PATH:?}/.config/config-win.toml ${GITHUB_WORKSPACE:?}/.cargo/config.toml

    - name: Use linux config
      shell: bash
      if: inputs.target == 'x86_64-unknown-linux-gnu' && inputs.use-cross == 'false'
      run: |
        cp -T ${GITHUB_ACTION_PATH:?}/.config/config-linux.toml ${GITHUB_WORKSPACE:?}/.cargo/config.toml

    - name: Use darwin config
      shell: bash
      if: inputs.target == 'x86_64-apple-darwin' && inputs.use-cross == 'false'
      run: |
        cp ${GITHUB_ACTION_PATH:?}/.config/config-darwin.toml ${GITHUB_WORKSPACE:?}/.cargo/config.toml

    - name: Cargo check
      uses: actions-rs/cargo@844f36862e911db73fe0815f00a4a2602c279505 # v1
      with:
        command: check
        use-cross: ${{ inputs.use-cross }}
        toolchain: ${{ inputs.toolchain }}
        args: --${{ inputs.feature }} --target ${{ inputs.target }}
